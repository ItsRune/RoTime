[{"title":"Installation","type":0,"sectionRef":"#","url":"/RoTime/docs/intro","content":"","keywords":""},{"title":"Roblox Module​","type":1,"pageTitle":"Installation","url":"/RoTime/docs/intro#roblox-module","content":"Get the Roblox module Use the module ID 10459870631 within the require. (Recommended)ORInsert the module and place it into ReplicatedStorage "},{"title":"Timezones","type":0,"sectionRef":"#","url":"/RoTime/docs/Timezones","content":"","keywords":""},{"title":"Adding​","type":1,"pageTitle":"Timezones","url":"/RoTime/docs/Timezones#adding","content":"If you'd like to add your own custom timezone to the module, there's an easy method setup for you to do so! Simply name the timezone, and then add the offset from UTC. For example, if you wanted to add a timezone for the United Kingdom, you would do the following: local RoTime = require(10459870631).new() RoTime:addTimezone(&quot;United Kingdom&quot;, 0)  "},{"title":"Removing​","type":1,"pageTitle":"Timezones","url":"/RoTime/docs/Timezones#removing","content":"If you'd like to remove a timezone, you can do so by using the removeTimezone method. For example, if you wanted to remove the timezone for the United Kingdom, you would do the following: local RoTime = require(10459870631).new() RoTime:removeTimezone(&quot;United Kingdom&quot;)  "},{"title":"Defaults​","type":1,"pageTitle":"Timezones","url":"/RoTime/docs/Timezones#defaults","content":"The module comes with a few default timezones, which are listed below: GMTAmerica/PhilidolphiaAmerica/CDTAmerica/New_YorkAmerica/PDTAmerica/Los_AngelesAmerica/EDTEurope/CETEurope/LondonEurope/BerlinEurope/NetherlandsEurope/ParisAustralia/PerthAustralia/SydneyAustralia/DarwinAustralia/VictoriaAustralia/TasmaniaAustralia/QueenslandAsia/IndiaAsia/ZhongshanAsia/SingaporeAsia/ShanghaiAsia/JapanAfrica/WesternAfrica/CentralAfrica/Eastern "},{"title":"Timer","type":0,"sectionRef":"#","url":"/RoTime/api/Timer","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#types","content":" "},{"title":"timerData​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#timerData","content":"&lt;/&gt; interface timerData { Completed: Signal Changed: Signal Start: (self: Timer) → nil Pause: (self: Timer) → nil Resume: (self: Timer) → nil Cancel: (self: Timer) → nil }  "},{"title":"Functions​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#new","content":"Constructor since 1.0.0 &lt;/&gt; Timer.new( start: number, finish: number, increment: number? ) → Timer Constructs a new timer.  "},{"title":"Start​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#Start","content":"since 1.0.0 &lt;/&gt; Timer:Start() → () Starts the timer.  "},{"title":"Pause​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#Pause","content":"since 1.0.0 &lt;/&gt; Timer:Pause() → () Pauses the timer.  "},{"title":"Resume​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#Resume","content":"since 1.0.0 &lt;/&gt; Timer:Resume() → () Resumes the timer.  "},{"title":"Cancel​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#Cancel","content":"since 1.0.0 &lt;/&gt; Timer:Cancel() → () Cancels the timer.  "},{"title":"Destroy​","type":1,"pageTitle":"Timer","url":"/RoTime/api/Timer#Destroy","content":"since 1.0.0 &lt;/&gt; Timer:Destroy() → nil Destroys the timer class. "},{"title":"Formatting Patterns","type":0,"sectionRef":"#","url":"/RoTime/docs/Patterns","content":"","keywords":""},{"title":"What are formatting patterns?​","type":1,"pageTitle":"Formatting Patterns","url":"/RoTime/docs/Patterns#what-are-formatting-patterns","content":"Formatting patterns are a way to format time. For example, if you wanted to format time to look like this: 12:00:00 AM, you would use the formatting pattern #h:#m:#s #a. Formatting patterns are used in the RoTime:format() method. Each pattern must begin with a &quot;#&quot; and end with a letter. "},{"title":"List of formatting patterns​","type":1,"pageTitle":"Formatting Patterns","url":"/RoTime/docs/Patterns#list-of-formatting-patterns","content":"Pattern\tDescription\tType\tExample#yd\tGets the day of the year (1/365)\tNumber\t1 #dd\tShortened day of the month\tString\tMon #dddd\tFull day of the month\tString\tMonday #ms\tThe current milliseconds\tNumber\t924 #mm\tThe month of the year\tNumber\t1 #mmm\tShortened month of the year\tString\tJan #mmmm\tFull month of the year\tString\tJanuary #yyyy\tThe full year\tNumber\t2021 #yy\tThe year but shortened\tNumber\t21 #h\tThe hour of the day (12 hour)\tNumber\t1 #hh\tThe hour of the day (24 hour)\tNumber\t13 #w\tGets the week day number\tNumber\t3 #ww\tToken not implemented yet\tString\tNot_Implemented #m\tThe minute of the hour\tNumber\t1 #s\tThe second of the minute\tNumber\t1 #a\tThe AM/PM of the time\tString\tAM #z\tThe current timezone\tString\tUTC "},{"title":"RoTime","type":0,"sectionRef":"#","url":"/RoTime/api/RoTime","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#types","content":" "},{"title":"additionSubtractionInterface​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#additionSubtractionInterface","content":"&lt;/&gt; type additionSubtractionInterface = &quot;second&quot; | &quot;minute&quot; | &quot;hour&quot; | &quot;day&quot; | &quot;week&quot; | &quot;month&quot; | &quot;year&quot;  "},{"title":"Properties​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#properties","content":" "},{"title":"Timer​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#Timer","content":"&lt;/&gt; RoTime.Timer: ( start: number, finish: number, increment: number? ) → Timer  "},{"title":"Functions​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#new","content":"Constructor since 2.0.0 &lt;/&gt; RoTime.new() → RoTime Constructs a new class.  "},{"title":"timezone​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#timezone","content":"since 2.0.0 &lt;/&gt; RoTime:timezone(newTimezone: string) → RoTime Sets the timezone to the specified timezone.  "},{"title":"addTimezone​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#addTimezone","content":"since 2.0.0 &lt;/&gt; RoTime:addTimezone( timezoneName: string, timezoneOffset: number ) → RoTime Creates a new timezone with the designated offset.  "},{"title":"isLeapYear​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#isLeapYear","content":"since 2.0.0 &lt;/&gt; RoTime:isLeapYear() → boolean Checks if the current time is a leap year.  "},{"title":"setFormat​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#setFormat","content":"Chainable since 2.0.0 &lt;/&gt; RoTime:setFormat(formattingString: string) → RoTime Sets the format if none is provided in methods.  "},{"title":"fromNow​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#fromNow","content":"since 2.0.0 &lt;/&gt; RoTime:fromNow( input: string, format: string? ) → number Takes a future time and calculates the difference, returning time duration.  "},{"title":"toNow​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#toNow","content":"since 2.0.0 &lt;/&gt; RoTime:toNow( input: string, format: string? ) → number Takes a past time and calculates the difference, returning time duration.  "},{"title":"getDateTime​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#getDateTime","content":"since 2.0.0 &lt;/&gt; RoTime:getDateTime() → DateTime Gets the DateTime Instance.  "},{"title":"getDate​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#getDate","content":"since 2.0.0 &lt;/&gt; RoTime:getDate() → string Gets the Date.  "},{"title":"getTime​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#getTime","content":"since 2.0.0 &lt;/&gt; RoTime:getTime() → string Gets the Time.  "},{"title":"getCalender​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#getCalender","content":"since 2.0.1 &lt;/&gt; RoTime:getCalender() → { amountOfDays: number, year: number, isLeapYear: boolean, days: {{ dayName: string, isToday: boolean }} } Gets the calender for the month.  "},{"title":"addition​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#addition","content":"Chainable since 2.0.0 &lt;/&gt; RoTime:addition( amount: number, Type: additionSubtractionInterface ) → RoTime Adds an amount of time based on the addition/subtraction type. HEY RoTime:add(amount, Type) also works with this method.  "},{"title":"subtract​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#subtract","content":"Chainable since 2.0.0 &lt;/&gt; RoTime:subtract( amount: number, Type: additionSubtractionInterface ) → RoTime Subtracts an amount of time based on the addition/subtraction type. HEY RoTime:sub(amount, Type) also works with this method.  "},{"title":"set​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#set","content":"Chainable since 2.0.0 &lt;/&gt; RoTime:set( input: string, format: string? ) → RoTime Sets the time to the specified input and format.  "},{"title":"format​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#format","content":"Chainable since 2.0.0 &lt;/&gt; RoTime:format(input: string) → string Formats the current time with certain formatting parameters.  "},{"title":"Destroy​","type":1,"pageTitle":"RoTime","url":"/RoTime/api/RoTime#Destroy","content":"since 2.0.0 &lt;/&gt; RoTime:Destroy() → nil Destroys the module and cleans methods. "},{"title":"Why use RoTime?","type":0,"sectionRef":"#","url":"/RoTime/docs/reasonForUse","content":"","keywords":""},{"title":"Features​","type":1,"pageTitle":"Why use RoTime?","url":"/RoTime/docs/reasonForUse#features","content":"Easy to use - RoTime is designed to be as easy to use as possible.Customizable - RoTime is designed to be as customizable as possible. You can change the time format, timezone, and more.Chainable - RoTime is designed to be as chainable as possible. You can chain methods to make your code look cleaner. "},{"title":"Examples​","type":1,"pageTitle":"Why use RoTime?","url":"/RoTime/docs/reasonForUse#examples","content":"local RoTime = require(10459870631).new() print(RoTime:getTime()) -- 12:00:00 AM print(RoTime:getDate()) -- 1/1/1970 print(RoTime:getTimezone()) -- UTC print(RoTime:format(&quot;#h Hours #m Minutes #s Seconds&quot;)) -- 0 Hours 0 Minutes 0 Seconds print(RoTime:timezone(&quot;America/New_York&quot;)) -- Changes the timezone to America/New_York  "}]